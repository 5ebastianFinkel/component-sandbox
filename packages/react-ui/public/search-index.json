[
  {
    "id": "src/stories/TokensBuiltIn.mdx",
    "title": "Design System/Tokens (Built-in Components)",
    "type": "docs",
    "path": "/?path=/docs/design-system-tokens-built-in-components--docs",
    "headings": [
      "Design System Tokens mit Storybook Components",
      "Farben mit ColorPalette und ColorItem",
      "ColorPalette für Farbgruppen",
      "Typografie mit Typeset",
      "Schriftgrößen",
      "Code-Beispiele mit Source",
      "CSS Verwendung"
    ],
    "tags": [],
    "description": "Diese Seite demonstriert die Verwendung von Storybooks eingebauten Komponenten zur Dokumentation von Design Tokens."
  },
  {
    "id": "src/stories/Tokens.mdx",
    "title": "Design System/Tokens",
    "type": "docs",
    "path": "/?path=/docs/design-system-tokens--docs",
    "headings": [
      "Design System Tokens",
      "Verwendung",
      "In CSS/SCSS",
      "In Vue-Komponenten",
      "Farben",
      "Basis-Farben",
      "Brand-Farben",
      "Zustands-Farben",
      "Abstände und Größen",
      "Border Radius",
      "Button-Größen",
      "Layering (Z-Index)",
      "Typografie",
      "Interaktive Token-Übersicht",
      "Integration in Ihre Anwendung",
      "Import über NPM",
      "Überschreiben von Tokens",
      "Best Practices"
    ],
    "tags": [],
    "description": "Unsere Design Tokens bilden die Grundlage für ein konsistentes visuelles Erscheinungsbild über alle Komponenten hinweg."
  },
  {
    "id": "src/stories/SearchDialog.mdx",
    "title": "Components/SearchDialog/Documentation",
    "type": "docs",
    "path": "/?path=/docs/components-searchdialog-documentation--docs",
    "headings": [
      "Search Dialog Component",
      "Features",
      "Usage",
      "With Provider (Recommended)",
      "Controlled Usage",
      "Search Shortcuts",
      "Keyboard Navigation",
      "Performance",
      "Browser Support"
    ],
    "tags": [],
    "description": "The `SearchDialog` component provides a powerful, keyboard-driven search interface for Storybook that allows users to quickly find stories and documentation."
  },
  {
    "id": "src/stories/MermaidDiagram.mdx",
    "title": "Components/MermaidDiagram/Documentation",
    "type": "docs",
    "path": "/?path=/docs/components-mermaiddiagram-documentation--docs",
    "headings": [
      "Mermaid Diagram Component",
      "Overview",
      "Features",
      "Installation",
      "Basic Usage",
      "Diagram Types",
      "Flowchart",
      "Sequence Diagram",
      "Class Diagram",
      "State Diagram",
      "Gantt Chart",
      "Pie Chart",
      "Git Graph",
      "Entity Relationship Diagram",
      "User Journey",
      "Theming",
      "Dark Theme Example",
      "Interactive Diagrams",
      "API Reference",
      "Props",
      "MermaidDiagramProps",
      "Best Practices",
      "1. Always Provide ARIA Labels",
      "2. Use Design System Tokens",
      "3. Error Handling",
      "4. Performance Considerations",
      "Common Patterns",
      "Dynamic Diagrams",
      "Responsive Diagrams",
      "Troubleshooting",
      "Diagram Not Rendering",
      "Styling Issues",
      "Performance Issues",
      "Resources",
      "Accessibility",
      "Browser Support"
    ],
    "tags": [],
    "description": "The `MermaidDiagram` component enables you to render beautiful diagrams and charts using [Mermaid](https://mermaid.js.org/) syntax directly in your React applications."
  }
]